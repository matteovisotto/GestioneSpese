#  If 'strict' is True, then the Java Toolkit will reject unsigned
#  or unencrypted messages if it expects them signed or encrypted
#  Also will reject the messages if not strictly follow the SAML
onelogin.saml2.strict =  true

# Enable debug mode (to print errors)
onelogin.saml2.debug =  false


#  Service Provider Data that we are deploying
#

#  Identifier of the SP entity  (must be a URI)
onelogin.saml2.sp.entityid = https://gestionespese.matmacsystem.it/sso/metadata

# Specifies info about where and how the <AuthnResponse> message MUST be
#  returned to the requester, in this case our SP.
# URL Location where the <Response> from the IdP will be returned
onelogin.saml2.sp.assertion_consumer_service.url = https://gestionespese.matmacsystem.it/sso/post

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-POST binding only
onelogin.saml2.sp.assertion_consumer_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST

# Specifies info about where and how the <Logout Response> message MUST be
# returned to the requester, in this case our SP.
onelogin.saml2.sp.single_logout_service.url = https://gestionespese.matmacsystem.it/sso/slo

# SAML protocol binding to be used when returning the <LogoutResponse> or sending the <LogoutRequest>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.sp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Specifies constraints on the name identifier to be used to
# represent the requested subject.
# Take a look on lib/Saml2/Constants.php to see the NameIdFormat supported
onelogin.saml2.sp.nameidformat = urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified

# Usually x509cert and privateKey of the SP are provided by files placed at
# the certs folder. But we can also provide them with the following parameters

onelogin.saml2.sp.x509cert =MIIC8zCCAdsCBgF9DfVXhzANBgkqhkiG9w0BAQsFADA9MTswOQYDVQQDDDJodHRwczovL2dlc3Rpb25lc3Blc2UubWF0bWFjc3lzdGVtLml0L3Nzby9tZXRhZGF0YTAeFw0yMTExMTEwNzQzNDJaFw0zMTExMTEwNzQ1MjJaMD0xOzA5BgNVBAMMMmh0dHBzOi8vZ2VzdGlvbmVzcGVzZS5tYXRtYWNzeXN0ZW0uaXQvc3NvL21ldGFkYXRhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxDplzEU988Oyh/h/9rx/B3FQWX0WGKs/KelUnYIdZZ7XpNNr9z6Htpv+9FIkAIKL/i5aNxdtdrByI9cAGePO7AKI12Wq1ljNkC771N6BNw4CaT0vu5NJPtGVZ+yLG0QsjzJvayTbpFtO+kti7mtcDhGHoiDUK/Mh6i86RjlJPv6DT+fB8mbiE98vPgj35iHLAAlogmcqgPHqWf8X+5tiAsZXadzKzPJ6KzMSvPlWAxJWGHqn7hPfJbgkv8wd45+aJWeynitnc6JwdwXJT4Jrkp2crQbxpi6iaHKiEMiwnep6M2WqI2m4kAetwGOoogk2M3VFkBzk14ivVeT7HFoUHQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAktPQyU2obWAxoPQPMln1uOJWhS+PflfGOGoRbOnxenpp6XdlFDWfreKLJNgF5w3VLgRXYU26in+xoSKtjlOtHxYnR37FEaKOctTfuczbu/QsI3tg07ru5a+H0v7XQMW71XDX+pFQ8a6/J4fqpVfl0Fz8Nid89HPdaWt4L8slWVhlIZDoSHchKHkyifmwtV85j4Kg8OYCoIMVnyIrCAKzC6cG308RPmOmWgRjMU6lFbX7pKmTw3rktfsAthilbi0HwifYs56Mf1eURQAO97B8hmbakPnRByBTPuahXaHr0S0zri9fgxZiExK3jE3ZaC8QcSALJ6Ylf72E9fgLl76FX

# Requires Format PKCS#8   BEGIN PRIVATE KEY
# If you have     PKCS#1   BEGIN RSA PRIVATE KEY  convert it by   openssl pkcs8 -topk8 -inform pem -nocrypt -in sp.rsa_key -outform pem -out sp.pem
onelogin.saml2.sp.privatekey = MIIEowIBAAKCAQEAxDplzEU988Oyh/h/9rx/B3FQWX0WGKs/KelUnYIdZZ7XpNNr9z6Htpv+9FIkAIKL/i5aNxdtdrByI9cAGePO7AKI12Wq1ljNkC771N6BNw4CaT0vu5NJPtGVZ+yLG0QsjzJvayTbpFtO+kti7mtcDhGHoiDUK/Mh6i86RjlJPv6DT+fB8mbiE98vPgj35iHLAAlogmcqgPHqWf8X+5tiAsZXadzKzPJ6KzMSvPlWAxJWGHqn7hPfJbgkv8wd45+aJWeynitnc6JwdwXJT4Jrkp2crQbxpi6iaHKiEMiwnep6M2WqI2m4kAetwGOoogk2M3VFkBzk14ivVeT7HFoUHQIDAQABAoIBACrBrry7uawL0DLgasGQgP1WK3PUVaQ6bCDtvoozd8RUwBgiGTxeW6Pmib8ixsV1rJtN7kpiyG88MyKsDlGV2diDFN4aQQdDgkcQdb8EXJNqcgwMUQJGLYeKk0t5tzXRvQPWsYBfH5zIaIUROBVLP1uxZiRlktWgvJsSf1gd01/uIuaYpQiquw7EtrglihRnOJJEYIYGYYckxco0Wehfl3XWnhxXsK59etTj88YILDZ2HHXUl7bGBthYHJML+0ZeJ7kyxUhN+jy1PV+E0RkNbHi8ApbvPZZ2BWorP37LztgiVOE6XhQA++KLi1psz0ajfCOpCGXSlTe18n/cSZ3jXAECgYEA+RZgLiQNw00iUe9PgfTMdWsDM/iJyHDkxi0ZYBNUUimRTPta0BCufuoArTIxhWYMCRkwy9OyNw49l9ycBR9/5S6G/kTTtqsbBq80ciICykAjAdc/ioMfzbdyHfw0lDtoiVie0Ig/GTeFAxkJl30AZHVvpnHls0LgtmXi59Zqyn0CgYEAyax8nNFdNmnOsXpj8a1Uhy2IF2G6QPpISMPgoAPuJWg6kC/fry/kldDsQO9jhqJuzLYgdMg+ayslRbIhEWjigHw2EKeXCRSMrq3R5zT7lk/jhtjmuu8Tfn6B2TvQ0Zf7LpqKDbIhTWQjMDYxTlJywUO81hFBLarUP6589R3VAiECgYEAo2tXvM3wraKMkr70JenqvlpwJoe4NeZDYfWywULNPn6BEsWSBhH7uc5ilT7qGIAkA1AgoImKUe6o4FpfjkjlSwJklKupTx4hRBhsyzifJfxAO3Px/zkaA4iIeT2/bUUwx3N59ox9AVlYjfi+P0JGoKIfl08AicSl02UzIjGdrK0CgYAbj1LIK2RNl1ADuPIHiORQRMygRV6qmoleSEZeF6tnuUKniaNL0YOvZYmjphM3xuLVXt44l1TQWGkTiTAzrN2nKVJKHFzrhL9k76QLsJXhCLHTL7j4OsuzMZ6VDTOQMPDGgZ/0Fy+t381fPUinp2S/PH6F0n3Ru9KdkT7KUHVXgQKBgEM2UVb2mfnR1yMl/gKysPCw8NUEQeMZ+HDlVv+QtgE0Zp0lVuxqs23SYyCwSbkLiie5craumaqx/TXPKV+wOApxi2ocY9/GDSbn26kpJfYRB46dpiKnm/pFzBnBuAeg1P+VAr2oY65gEgrMipZ3Tt9A8JaMsUh/SDJ96veLPWl5

# Identity Provider Data that we want connect with our SP
#

# Identifier of the IdP entity  (must be a URI)
onelogin.saml2.idp.entityid = https://idp.matmacsystem.it/auth/realms/matmacsystem

# SSO endpoint info of the IdP. (Authentication Request protocol)
# URL Target of the IdP where the SP will send the Authentication Request Message
onelogin.saml2.idp.single_sign_on_service.url = https://idp.matmacsystem.it/auth/realms/matmacsystem/protocol/saml

# SAML protocol binding to be used to deliver the <AuthnRequest> message
# to the IdP.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_sign_on_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# SLO endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Request
onelogin.saml2.idp.single_logout_service.url = https://idp.matmacsystem.it/auth/realms/matmacsystem/protocol/saml

# Optional SLO Response endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Response. If left blank, same URL as onelogin.saml2.idp.single_logout_service.url will be used.
# Some IdPs use a separate URL for sending a logout request and response, use this property to set the separate response url
onelogin.saml2.idp.single_logout_service.response.url = https://idp.matmacsystem.it/auth/realms/matmacsystem/protocol/saml

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Public x509 certificate of the IdP
onelogin.saml2.idp.x509cert = MIICpzCCAY8CBgF8IWsClTANBgkqhkiG9w0BAQsFADAXMRUwEwYDVQQDDAxtYXRtYWNzeXN0ZW0wHhcNMjEwOTI2MDkyMjEzWhcNMzEwOTI2MDkyMzUzWjAXMRUwEwYDVQQDDAxtYXRtYWNzeXN0ZW0wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCuhYwJHvxyUriKuN4gds5/hjzutPBiJ6fJmyKJZjuLbwYaqLr+tyttIKg+5oEvNmQLycFP6sB/1EvONSZtlXvYv4kSciTyVh7XKRZ8tURrtpX6QS0L3TyouM/3RCgw9WV9xQheP+EJ1LgLpxV8kOEP000hOdtjJVFLq/HFzU3IAm2XaXPsUboqOgi0/shEHgA1lDNJxsho80bd2GBOiXO7tLtnmHmGm3fJt5ebusWxSB5dc9h71br0JADn+Z+0MniB6OvBwW22VwYDTADO81nsNtk+IAPb49CbaTPZ5onyuCP8lgGLU8iFzCMdZgdJbQP7gY5n7g9BhiGwJ9akeWuXAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAE6o2r+yojomuPyPlwsJOxCMeek+Ix8Nr7glo2ruOEb+iB8UFbeC5MQN1urFnrk60+IqbqB2Bmp3AOXyBDdJLLpO6Yv0SFcHUXcnBHTu6qtlyvBWW4PqhocvVxxpXr0bpZG7+Hq3JzNmVZPOx2CaEZ666j0p7jyxHzClvIL12CjsXzZ6t/F7cjqqqDI8wNb1rP32DC0MGazoJSToOPRVUY6upd2eCtXN5TR+8HSglWgIx0UadEyTc2kux+fodTYvm4wKkncxYRMU7FE83g7NB688Kw8gH+nv8XoKZ4O6bSj4Nn6L7Q2aXORb9cTuRtQB1xc3VtgOXe739zf17Oxjbro=

# Instead of use the whole x509cert you can use a fingerprint
# (openssl x509 -noout -fingerprint -in "idp.crt" to generate it,
# or add for example the -sha256 , -sha384 or -sha512 parameter)
#
# If a fingerprint is provided, then the certFingerprintAlgorithm is required in order to
# let the toolkit know which Algorithm was used. Possible values: sha1, sha256, sha384 or sha512
# 'sha1' is the default value.
# onelogin.saml2.idp.certfingerprint =
# onelogin.saml2.idp.certfingerprint_algorithm = sha256


# Security settings
#

# Indicates that the nameID of the <samlp:logoutRequest> sent by this SP
# will be encrypted.
onelogin.saml2.security.nameid_encrypted = false

# Indicates whether the <samlp:AuthnRequest> messages sent by this SP
# will be signed.              [The Metadata of the SP will offer this info]
onelogin.saml2.security.authnrequest_signed = true

# Indicates whether the <samlp:logoutRequest> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutrequest_signed = true

# Indicates whether the <samlp:logoutResponse> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutresponse_signed = true

# Indicates a requirement for the <samlp:Response>, <samlp:LogoutRequest> and
# <samlp:LogoutResponse> elements received by this SP to be signed.
onelogin.saml2.security.want_messages_signed = true

# Indicates a requirement for the <saml:Assertion> elements received by this SP to be signed.
onelogin.saml2.security.want_assertions_signed = true

# Indicates a requirement for the Metadata of this SP to be signed.
# Right now supported null (in order to not sign) or true (sign using SP private key)
onelogin.saml2.security.sign_metadata = true

# Indicates a requirement for the Assertions received by this SP to be encrypted
onelogin.saml2.security.want_assertions_encrypted = false

# Indicates a requirement for the NameID received by this SP to be encrypted
onelogin.saml2.security.want_nameid_encrypted = false

# Authentication context.
# Set Empty and no AuthContext will be sent in the AuthNRequest
# You can set multiple values (comma separated them)
onelogin.saml2.security.requested_authncontext = urn:oasis:names:tc:SAML:2.0:ac:classes:Password

# Allows the authn comparison parameter to be set, defaults to 'exact'
onelogin.saml2.security.onelogin.saml2.security.requested_authncontextcomparison = exact

# Allows duplicated names in the attribute statement
onelogin.saml2.security.allow_duplicated_attribute_name = false

# Indicates if the SP will validate all received xmls.
# (In order to validate the xml, 'strict' and 'wantXMLValidation' must be true).
onelogin.saml2.security.want_xml_validation = true

# Algorithm that the toolkit will use on signing process. Options:
#  'http://www.w3.org/2000/09/xmldsig#rsa-sha1'
#  'http://www.w3.org/2000/09/xmldsig#dsa-sha1'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha384'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512'
onelogin.saml2.security.signature_algorithm = http://www.w3.org/2001/04/xmldsig-more#rsa-sha256

# Algorithm that the toolkit will use on digest process. Options:
#  'http://www.w3.org/2000/09/xmldsig#sha1'
#  'http://www.w3.org/2001/04/xmlenc#sha256'
#  'http://www.w3.org/2001/04/xmldsig-more#sha384'
#  'http://www.w3.org/2001/04/xmlenc#sha512'
onelogin.saml2.security.digest_algorithm = http://www.w3.org/2001/04/xmlenc#sha256 

# Reject Signatures with deprecated algorithms (sha1)
onelogin.saml2.security.reject_deprecated_alg = true

# Organization
onelogin.saml2.organization.name = Gestione Spese 
onelogin.saml2.organization.displayname = Gestione spese my MatMac System
onelogin.saml2.organization.url = https://gestionespese.matmacsystem.it
onelogin.saml2.organization.lang =

# Contacts
onelogin.saml2.contacts.technical.given_name = Matteo Visotto
onelogin.saml2.contacts.technical.email_address = matev1998@gmail.com
onelogin.saml2.contacts.support.given_name = Matteo Visotto
onelogin.saml2.contacts.support.email_address = matev1998@gmail.com